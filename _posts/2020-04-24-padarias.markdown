---
layout: post
title:  "Example Post #1"
date:   2020-04-26
categories: Python GIS Tutorial-ish
permalink: /:title
---
Abstract: I guess the abstract goes here.



["A Padaria Portuguesa"](https://www.apadariaportuguesa.pt/) 

Abrimos a 5 de Novembro de 2010, a primeira “Padaria Portuguesa”, na Av. João XXI, em Lisboa.

As of April 2020 they have 62 locations in the greater Lisbon area. These days it's kind of hard to walk around the city without stumbling into one of these places.

This made me wonder: what is the actual reach of this business in terms of percentage of area covered?

To answer this question the first thing we need are the coordinates of every single location. Luckily for us, Zomato has a free [API](https://developers.zomato.com/api) which has some limits, but very rich and easy to use. 

Once you get a developer key, you can query the code of your city of interest in Zomato's website and then use the /Search API to grab all the restaurants that match your query (note: you can only get 20 restaurants at a time, up to 100 max). Getting data from Zomato is not really the scope of this article but you can find the code I used [here](github.com).

| restaurant.name                               | restaurant.latitude | restaurant.longitude |
| --------------------------------------------- | :-----------------: | :------------------: |
| A Padaria Portuguesa - Duque D'Ávila          |       38.735        |       -9.14402       |
| A Padaria Portuguesa - Camões                 |       38.7111       |       -9.14321       |
| A Padaria Portuguesa - Barata Salgueiro       |       38.7216       |       -9.14896       |
| A Padaria Portuguesa - Campo de Ourique       |       38.7184       |       -9.16477       |
| A Padaria Portuguesa - António Augusto Aguiar |       38.7319       |       -9.15185       |

Alright so now we have the latitude and longitude coordinates for each store, let's look at them. This is where one of my favorite Python libraries comes in: [Geopandas](https://geopandas.org/).

To oversimplify it, Geopandas integrates:

- [Fiona](https://pypi.org/project/Fiona/): to read and write geographic files (shapefiles, GeoJSON);
- [Pandas](https://pandas.pydata.org/): to use the DataFrame structure and create GeoDataFrames and GeoSeries;
- [Pyproj](https://pypi.org/project/pyproj/): to perform projections of different Coordinate Reference Systems (CRS);
- Shapely: to calculate distances and geometric manipulations;
- Matplotlib: to plot maps.

Geopandas combines all these libraries into one, awesome geo-package.



Shapely is a BSD-licensed Python package for manipulation and analysis of planar geometric objects.

Now we need a frame of reference. To answer our question we need Lisbon map. Lisbon has a data portal where we can find the polygons that define the city and inner divisions (freguesias).

With this library we can

<i class="fas fa-camera"></i>

Geographical Parenthesis:

Most location data by default is stored as latitude/longitude coordinates which specify every place on the surface of an ellipsoid (aka the Earth). This is important because all the geometrical manipulations available in Shapely are 

This means that we need to project latitude and longitude values into a Coordinate Reference System (CRS) in 2D. 